!<arch>
0-isupper.c/    1570811851  1000  1000  100664  289       `
#include "holberton.h"
/**
 * _isupper - Function that checks for uppercase character.
 * @c: is the character input
 * Return: 1 if c is uppercase, return 0 otherwise
 */
int _isupper(int c)
{
	int i;

	for (i = 65; i <= 90; i++)
	{
		if (i == c)
		{
			return (1);
		}
	}
	return (0);
}

0-memset.c/     1570811948  1000  1000  100664  275       `
#include "holberton.h"
/**
 * _memset - function that fills memory with a constant byte.
 * @s: input
 * @b: input
 * @n: input
 * Return: output
 */
char *_memset(char *s, char b, unsigned int n)
{
	unsigned int i;

	for (i = 0; i < n; i++)
	{
		s[i] = b;
	}
	return (s);
}

0-strcat.c/     1570812007  1000  1000  100664  320       `
#include "holberton.h"
/**
 * _strcat - function that concatenates two strings.
 * @dest: input
 * @src: input
 * Return: output
 */
char *_strcat(char *dest, char *src)
{
	int i = 0;
	int j = 0;

	while (dest[i] != '\0')
	{
		i++;
	}
	while (src[j] != '\0')
	{
		dest[i + j] = src[j];
		j++;
	}
	i++;
	return (dest);
}
1-isdigit.c/    1570812080  1000  1000  100664  289       `
#include "holberton.h"
/**
 * _isdigit - function that checks for a digit (0 through 9).
 * @c: is the character input
 * Return: 1 if c is a digit, return 0 otherwise
 */
int _isdigit(int c)
{
	int i;

	for (i = 48; i <= 57; i++)
	{
		if (i == c)
		{
			return (1);
		}
	}
	return (0);
}

1-memcpy.c/     1570812774  1000  1000  100664  282       `
#include "holberton.h"
/**
 * _memcpy - function that copies memory area.
 * @dest: input
 * @src: input
 * @n: input
 * Return: output
 */
char *_memcpy(char *dest, char *src, unsigned int n)
{
	unsigned int i;

	for (i = 0; i < n; i++)
	{
		dest[i] = src[i];
	}
	return (dest);
}
1-strncat.c/    1570812474  1000  1000  100664  347       `
#include "holberton.h"
/**
 * _strncat - function that concatenates two strings.
 * @dest: input
 * @src: input
 * @n: input
 * Return: output
 */
char *_strncat(char *dest, char *src, int n)
{
	int i = 0;
	int j;

	while (dest[i] != '\0')
	{
		i++;
	}
	for (j = 0; j < n && src[j] != '\0'; j++)
	{
		dest[i] = src[j];
		i++;
	}
	return (dest);
}

2-strchr.c/     1570812808  1000  1000  100664  264       `
#include "holberton.h"
#include <stdio.h>
/**
 * _strchr - function that locates a character in a string.
 * @s: input
 * @c: input
 * Return: output
 */
char *_strchr(char *s, char c)
{
	while (*s != c)
	{
		if (!*s++)
		{
			return (NULL);
		}
	}
	return (s);
}
2-strlen.c/     1570812243  1000  1000  100664  207       `
#include "holberton.h"
/**
 * _strlen - function that returns the length of a string.
 * @s: Pointer input
 * Return: i
 */
int _strlen(char *s)
{
	int i;

	for (i = 0; s[i] != '\0'; i++)
	{}
	return (i);
}

2-strncpy.c/    1570812593  1000  1000  100664  310       `
/**
 * _strncpy - function that copies a string.
 * @dest: input
 * @src: input
 * @n: input
 * Return: output
 */
char *_strncpy(char *dest, char *src, int n)
{
	int i;

	for (i = 0; src[i] != '\0'; i++)
	{
		if (i < n)
		{
			dest[i] = src[i];
		}
	}
	for ( ; i < n; i++)
		dest[i] = '\0';
	return (dest);
}
3-islower.c/    1570813089  1000  1000  100664  320       `
#include "holberton.h"
/**
 * _islower - checks for lowercase
 * @c: The character input
 * Return:
 * Returns 1 if c is lowercase.
 * Returns 0 otherwise.
 */
int _islower(int c)
{
	char lowercase;

	for (lowercase = 'a'; lowercase <= 'z'; lowercase++)
	{
		if (lowercase == c)
		{
			return (1);
		}
	}
	return (0);
}
3-puts.c/       1570812288  1000  1000  100664  222       `
#include "holberton.h"
/**
 * _puts - prints a string, followed by a new line, to stdout.
 * @str: input
 */
void _puts(char *str)
{
	int i = 0;

	while (str[i] != '\0')
	{
		_putchar(str[i]);
		i++;
	}
	_putchar('\n');
}
3-strcmp.c/     1570812656  1000  1000  100664  248       `
#include "holberton.h"
/**
 * _strcmp - function that compares two strings.
 * @s1: input
 * @s2: input
 * Return: output
 */
int _strcmp(char *s1, char *s2)
{
	int i = 0;

	while (s1[i] == s2[i] && s1[i] != '\0')
		i++;
	return (s1[i] - s2[i]);
}
3-strspn.c/     1570812841  1000  1000  100664  411       `
#include "holberton.h"
#include <stdio.h>
/**
 * _strspn - function that gets the length of a prefix substring.
 * @s: input
 * @accept: input
 * Return: output
 */
unsigned int _strspn(char *s, char *accept)
{
	int i;
	int j;

	for (i = 0; s[i] != '\0'; i++)
	{
		for (j = 0; accept[j] != '\0'; j++)
		{
			if (s[i] == accept[j])
			{
				break;
			}
		}
		if (!accept[j])
		{
			break;
		}

	}
	return (i);
}

4-isalpha.c/    1570813136  1000  1000  100664  443       `
#include "holberton.h"
/**
 * _isalpha - checks for alphabetic character
 * @c: The character input
 * Return: 1 if c is a letter, lowercase or uppercase
 * Return 0 otherwise.
 */
int _isalpha(int c)
{
	char lowercase;
	char uppercase;

	for (lowercase = 'a'; lowercase <= 'z'; lowercase++)
	{
		for (uppercase = 'A'; uppercase <= 'Z'; uppercase++)
		{
			if (lowercase == c || uppercase == c)
			{
				return (1);
			}
		}
	}
	return (0);
}

4-strpbrk.c/    1570812877  1000  1000  100664  365       `
#include "holberton.h"
/**
 * _strpbrk - function that searches a string for any of a set of bytes.
 * @s: input
 * @accept: input
 * Return: output
 */
char *_strpbrk(char *s, char *accept)
{
	int i;
	int j;

	for (i = 0; s[i] != '\0'; i++)
	{
		for (j = 0; accept[j] != '\0'; j++)
		{
			if (s[i] == accept[j])
			{
				return (s + i);
			}
		}
	}
	return (0);
}

5-strstr.c/     1570812906  1000  1000  100664  427       `
#include "holberton.h"
/**
 * _strstr - function that locates a substring.
 * @haystack: input
 * @needle: input
 * Return: output
 */
char *_strstr(char *haystack, char *needle)
{
	int i;
	int j;
	int k = 0;

	for (i = 0; haystack[i] != '\0'; i++)
	{
		j = 0;
		k = i;
		while (haystack[k] == needle[j] && needle[j] != '\0')
		{
			j++;
			k++;
		}
		if (needle[j] == '\0')
		{
			return (haystack + i);
		}
	}
	return (0);
}

6-abs.c/        1570813262  1000  1000  100664  247       `
#include "holberton.h"
/**
 * _abs - compute the absolute value of an integer
 * @n: The integer input
 * Return: absolute value
 */
int _abs(int n)
{
	int x;

	x = n;
	if (x >= 0)
	{
		return (x);
	}
	else
	{
		return (x * -1);
	}
	return (0);
}

9-strcpy.c/     1570812353  1000  1000  100664  403       `
#include "holberton.h"
/**
* _strcpy - function that copies the string pointed to by src, including the
* terminating null byte (\0), to the buffer pointed to by dest.
* @dest: input
* @src: input
* Return: value the pointer to dest
*/
char *_strcpy(char *dest, char *src)
{
	int l = 0;
	int i;

	while (src[l] != '\0')
	{
		l++;
	}
	for (i = 0; i <= l; i++)
	{
		dest[i] = src[i];
	}
	return (dest);
}

main.c/         1570814304  1000  1000  100664  147       `
#include "holberton.h"

int main(void)
{
	_puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
	return (0);
}

_putchar.c/     1570812383  1000  1000  100664  259       `
#include <unistd.h>



/**

 * _putchar - writes the character c to stdout

 * @c: The character to print

 *

 * Return: On success 1.

 * On error, -1 is returned, and errno is set appropriately.

 */

int _putchar(char c)

{

	return (write(1, &c, 1));

}

